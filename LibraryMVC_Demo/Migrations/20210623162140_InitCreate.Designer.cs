// <auto-generated />
using System;
using LibraryMVC_Demo.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LibraryMVC_Demo.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210623162140_InitCreate")]
    partial class InitCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LibraryMVC_Demo.Models.Author", b =>
                {
                    b.Property<int>("AuthorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AuthorName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("AuthorId");

                    b.ToTable("authors");

                    b.HasData(
                        new
                        {
                            AuthorId = 1,
                            AuthorName = "Shirow Masamune "
                        },
                        new
                        {
                            AuthorId = 2,
                            AuthorName = "Hitoshi Iwaaki"
                        },
                        new
                        {
                            AuthorId = 3,
                            AuthorName = "Yoshitoki Oima"
                        },
                        new
                        {
                            AuthorId = 4,
                            AuthorName = "Yana Toboso"
                        },
                        new
                        {
                            AuthorId = 5,
                            AuthorName = "Kudan Naduka"
                        },
                        new
                        {
                            AuthorId = 6,
                            AuthorName = "Sun Takeda"
                        });
                });

            modelBuilder.Entity("LibraryMVC_Demo.Models.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfPublishing")
                        .HasColumnType("datetime2");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("BookId");

                    b.HasIndex("AuthorId");

                    b.HasIndex("GenreId");

                    b.ToTable("books");

                    b.HasData(
                        new
                        {
                            BookId = 1,
                            AuthorId = 1,
                            DateOfPublishing = new DateTime(2008, 9, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GenreId = 1,
                            Title = "The Ghost in the Shell"
                        },
                        new
                        {
                            BookId = 2,
                            AuthorId = 2,
                            DateOfPublishing = new DateTime(2008, 7, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GenreId = 2,
                            Title = "Parasyte"
                        },
                        new
                        {
                            BookId = 3,
                            AuthorId = 3,
                            DateOfPublishing = new DateTime(2014, 6, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GenreId = 3,
                            Title = "A Silent Voice"
                        },
                        new
                        {
                            BookId = 4,
                            AuthorId = 4,
                            DateOfPublishing = new DateTime(2010, 2, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GenreId = 4,
                            Title = "Black Butler"
                        },
                        new
                        {
                            BookId = 5,
                            AuthorId = 5,
                            DateOfPublishing = new DateTime(2018, 5, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GenreId = 5,
                            Title = "Angels of Death"
                        },
                        new
                        {
                            BookId = 6,
                            AuthorId = 6,
                            DateOfPublishing = new DateTime(2017, 7, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GenreId = 6,
                            Title = "Gleipnir"
                        });
                });

            modelBuilder.Entity("LibraryMVC_Demo.Models.Genre", b =>
                {
                    b.Property<int>("GenreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("GenreId");

                    b.ToTable("genres");

                    b.HasData(
                        new
                        {
                            GenreId = 1,
                            Name = "Sci-Fi"
                        },
                        new
                        {
                            GenreId = 2,
                            Name = "Psychological"
                        },
                        new
                        {
                            GenreId = 3,
                            Name = "Drame"
                        },
                        new
                        {
                            GenreId = 4,
                            Name = "Mystery"
                        },
                        new
                        {
                            GenreId = 5,
                            Name = "Thriller"
                        },
                        new
                        {
                            GenreId = 6,
                            Name = "Seinen"
                        });
                });

            modelBuilder.Entity("LibraryMVC_Demo.Models.Book", b =>
                {
                    b.HasOne("LibraryMVC_Demo.Models.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryMVC_Demo.Models.Genre", "Genre")
                        .WithMany("Books")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("LibraryMVC_Demo.Models.Author", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("LibraryMVC_Demo.Models.Genre", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
